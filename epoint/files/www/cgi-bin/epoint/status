#!/usr/bin/lua
-- Copyright (C) 2010 ePoint Systems Ltd.

local http = require("luci.http.protocol")
local protocol = require("epoint.protocol")
local acl = require("epoint.acl")
require("uci")
require("luci.template")
require("epoint.i18n")

-- crond dies sometimes
os.execute("(pgrep crond || /etc/init.d/cron start) > /dev/null")

epoint.i18n.cgi_select_language()
write = io.write
luci.template.context.viewns = {}
local translate = epoint.i18n.translate

local function fmt(s, ...)
	return string.format(translate(s, ...), ...)
end

local function err(msg, details)
	io.write(
		"Status: 403 Forbidden\r\n"..
		"Content-Type: text/html; charset=utf-8\r\n")
	epoint.i18n.cgi_set_language_cookie()
	io.write("\r\n")
	ERROR = msg
	ERROR_DETAILS = details
	QUERY = QUERY or ""
	luci.template.render("epoint/client/error")
	os.exit(1)
end

local function hasaccess(addr)
	if not addr then
		err("Internal error", "Could not determine network address")
	end
	addr = acl.getaddr(addr)
	local ok, expire, rand = acl.hasaccess(addr)
	if not ok then
		return false
	end
	if not expire and not rand then
		return true, false, nil
	end
	if expire and not rand then
		return true, true, expire - os.time()
	end
	local fpr = protocol.getfpr(rand)
	if not fpr then
		err("Internal error", "")
	end
	local c = protocol.verify(fpr)
	if not c then
		err("Network error", "")
	end
	if c.value < 0 then
		err("Internal error", "")
	end
	local tariff = uci.get("epoint.config.tariff")
	local time = expire - os.time() + c.value * 60 / tariff
	if time < 0 then
		time = 0
	end
	return true, false, time
end

local qs = os.getenv("QUERY_STRING") or ""
local params = http.urldecode_params(qs)
QUERY = ""
redirect_url = params and params["G"] or nil
if redirect_url then
	QUERY = "?G=" .. protocol.urlencode(redirect_url)
	redirect_url = redirect_url:gsub("&", "&amp;"):gsub("\"", "&quot;")
end
local addr = os.getenv("REMOTE_ADDR")
local ok, lt, time = hasaccess(addr)
loggedin = ok
longterm = lt
whitelisted = false
status = ""
if ok then
	if time then
		local hours = math.floor(time / 3600)
		local minutes = math.floor((time - 3600*hours)/60 + 0.5) -- rounded
		if hours > 0 then
			status = fmt("%d hour", hours) .. " " .. fmt("%d minute", minutes)
		else
			status = fmt("%d minute", minutes)
		end
	else
		whitelisted = true
		status = translate("Unlimited access")
	end
else
	status = translate("No access")
end

io.write("Content-Type: text/html; charset=utf-8\r\n")
epoint.i18n.cgi_set_language_cookie()
io.write("\r\n")
luci.template.render("epoint/client/status")
